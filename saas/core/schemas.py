from typing import Dict, Any, Optional

from pydantic import BaseModel, Field


class KeystoreProfile(BaseModel):
    """
    Contact information for the keystore.
    """
    name: str = Field(..., title="Name", description="The contact name.", example="Foo Bar")
    email: str = Field(..., title="Email", description="The contact email address.", example="foo.bar@somehwere.com")


class KeystoreContent(BaseModel):
    """
    The content of a keystore.
    """
    iid: str = Field(..., title="IId", description="The id of the keystore's identity.")
    profile: KeystoreProfile = Field(..., title="Profile", description="The profile of the keystore.")
    nonce: int = Field(..., title="Nonce", description="A positive integer value that is increased every time the keystore content is updated.", example=4)
    signature: str = Field(..., title="Signature", description="A signature made with the keystore identity's signing key. This signature is used to verify the integrity of the keystore content.")
    assets: Dict[str, Any] = Field(..., title="Assets", description="Assets contained by this keystore.")


class GithubCredentials(BaseModel):
    """
    Github credentials.
    """
    login: str = Field(..., title="Login", description="The login name.")
    personal_access_token: str = Field(..., title="Personal Access Token", description="The personal access token generated by Github.")


class SSHCredentials(BaseModel):
    """
    SSH credentials.
    """
    host: str = Field(..., title="Host", description="The host name or IP of the remote machine.", example="35.34.55.2")
    login: str = Field(..., title="Login", description="The login for the remote machine.")
    key: str = Field(..., title="Key", description="The key content.")
    key_path: Optional[str] = Field(title="Key Path", description="An optional path to where the key has be stored.")
    is_cygwin: Optional[bool] = Field(title="Is Cygwin", description="An optional flag that indicates if the remote machine usies cygwin.")
    home_path: Optional[str] = Field(title="Home Path", description="An optional path to the home folder.")
